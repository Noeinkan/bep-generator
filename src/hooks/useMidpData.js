import { useState, useEffect, useRef, useCallback } from 'react';
import ApiService from '../services/apiService';

export const useMidpData = () => {
  const [midps, setMidps] = useState([]);
  const [loading, setLoading] = useState(false);
  const mountedRef = useRef(true);

  useEffect(() => {
    mountedRef.current = true;
    return () => { mountedRef.current = false; };
  }, []);

  const loadMidps = useCallback(async () => {
    setLoading(true);
    try {
      const midpData = await ApiService.getAllMIDPs();
      if (!mountedRef.current) return;
      setMidps(midpData.midps || []);
    } catch (error) {
      if (mountedRef.current) console.error('Failed to load MIDP data:', error);
    } finally {
      if (mountedRef.current) setLoading(false);
    }
  }, []);

  const createMidp = async (midpData) => {
    const projectId = 'project-1';
    try {
      await ApiService.autoGenerateMIDP(projectId, {
        projectName: midpData.projectName,
        description: midpData.description
      });
      await loadMidps();
      return { autoGenerated: true };
    } catch (autoError) {
      await ApiService.createMIDPFromTIDPs({
        projectName: midpData.projectName,
        description: midpData.description
      }, []);
      await loadMidps();
      return { autoGenerated: false };
    }
  };

  return {
    midps,
    loading,
    loadMidps,
    createMidp
  };
};